{"version":3,"file":"static/js/518.785bd983.chunk.js","mappings":"+SAOMA,EAAwB,CAC5BC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IACjC,GAA4BC,EAAAA,EAAAA,UAASZ,GAArC,eAAOa,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOjB,EAAf,EAAeA,KACfa,GAAU,SAAAK,GAAI,yBAAUA,GAAV,cAAiBlB,EAAOiB,GAAxB,GACf,EAEKE,EAAgB,mCAAG,WAAMJ,GAAN,iEACvBA,EAAMK,iBACN,IACEhB,GAASiB,EAAAA,EAAAA,IAAkBT,GAK5B,CAJC,MAAOU,GACPC,QAAQC,IAAIF,EACb,CAJD,QAKEG,GACD,CARsB,2CAAH,sDAWhBA,EAAY,WAChBZ,EAAUd,EACX,EAED,OACE,iCACE,SAAC2B,EAAA,EAAD,WACE,0CAEF,kBAAMC,SAAUR,EAAkBS,UAAU,iBAA5C,WACE,4CACA,mBAAOA,UAAU,kBAAjB,kBAEE,kBACEC,KAAK,OACL7B,KAAK,OACL8B,UAAQ,EACRb,MAAOL,EAAOZ,KACd+B,SAAUjB,EACVc,UAAU,wBAId,mBAAOA,UAAU,kBAAjB,oBAEE,kBACEC,KAAK,QACL7B,KAAK,QACL8B,UAAQ,EACRb,MAAOL,EAAOX,MACd8B,SAAUjB,EACVc,UAAU,wBAId,mBAAOA,UAAU,kBAAjB,sBAEE,kBACEC,KAAK,WACL7B,KAAK,WACL8B,UAAQ,EACRb,MAAOL,EAAOV,SACd6B,SAAUjB,EACVc,UAAU,wBAId,mBAAQC,KAAK,SAASD,UAAU,gBAAgBI,SAAUvB,EAA1D,qBAGe,aAAdH,IACC,yEAKT,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { getAuthError, getIsRefreshing } from 'redux/selectors';\nimport { useState } from 'react';\nimport { authRegisterThunk } from 'redux/auth/auth.operations';\nimport { Helmet } from 'react-helmet';\nimport './Register.css';\n\nconst loginFormInitialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const authError = useSelector(getAuthError);\n  const isRefreshing = useSelector(getIsRefreshing);\n  const [values, setValues] = useState(loginFormInitialState);\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      dispatch(authRegisterThunk(values));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setValues(loginFormInitialState);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <form onSubmit={handleFormSubmit} className=\"register__form\">\n        <h2>Please Sign In</h2>\n        <label className=\"register__label\">\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            required\n            value={values.name}\n            onChange={handleChange}\n            className=\"register__input\"\n          />\n        </label>\n\n        <label className=\"register__label\">\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            required\n            value={values.email}\n            onChange={handleChange}\n            className=\"register__input\"\n          />\n        </label>\n\n        <label className=\"register__label\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            required\n            value={values.password}\n            onChange={handleChange}\n            className=\"register__input\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"register__btn\" disabled={isRefreshing}>\n          Sign In\n        </button>\n        {authError === 'register' && (\n          <p>Please try again with other credentials.</p>\n        )}\n      </form>\n    </>\n  );\n}\n"],"names":["loginFormInitialState","name","email","password","RegisterPage","dispatch","useDispatch","authError","useSelector","getAuthError","isRefreshing","getIsRefreshing","useState","values","setValues","handleChange","event","target","value","prev","handleFormSubmit","preventDefault","authRegisterThunk","error","console","log","resetForm","Helmet","onSubmit","className","type","required","onChange","disabled"],"sourceRoot":""}