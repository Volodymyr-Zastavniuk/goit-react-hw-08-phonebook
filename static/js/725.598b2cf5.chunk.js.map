{"version":3,"file":"static/js/725.598b2cf5.chunk.js","mappings":"+SAOMA,EAAwB,CAC5BC,MAAO,GACPC,SAAU,IAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IACjC,GAA4BC,EAAAA,EAAAA,UAASX,GAArC,eAAOY,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACfL,GAAU,SAAAM,GAAI,yBAAUA,GAAV,cAAiBD,EAAOD,GAAxB,GACf,EACKG,EAAgB,mCAAG,WAAML,GAAN,iEACvBA,EAAMM,iBACN,IACEjB,GAASkB,EAAAA,EAAAA,IAAeV,GAKzB,CAJC,MAAOW,GACPC,QAAQC,IAAIF,EACb,CAJD,QAKEG,GACD,CARsB,2CAAH,sDAWhBA,EAAY,WAChBb,EAAUb,EACX,EAED,OACE,iCACE,SAAC2B,EAAA,EAAD,WACE,wCAEF,kBAAMC,SAAUR,EAAkBS,UAAU,cAA5C,WACE,0CACA,mBAAOA,UAAU,eAAjB,oBAEE,kBACEC,KAAK,QACLZ,KAAK,QACLa,UAAQ,EACRd,MAAOL,EAAOX,MACd+B,SAAUlB,EACVe,UAAU,qBAId,mBAAOA,UAAU,eAAjB,sBAEE,kBACEC,KAAK,WACLZ,KAAK,WACLa,UAAQ,EACRd,MAAOL,EAAOV,SACd8B,SAAUlB,EACVe,UAAU,qBAId,mBAAQC,KAAK,SAASD,UAAU,aAAaI,SAAUxB,EAAvD,mBAIe,UAAdH,IACC,yEAKT,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { getAuthError, getIsRefreshing } from 'redux/selectors';\nimport { useState } from 'react';\nimport { authLoginThunk } from 'redux/auth/auth.operations';\nimport { Helmet } from 'react-helmet';\nimport './LoginPage.css';\n\nconst loginFormInitialState = {\n  email: '',\n  password: '',\n};\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const authError = useSelector(getAuthError);\n  const isRefreshing = useSelector(getIsRefreshing);\n  const [values, setValues] = useState(loginFormInitialState);\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      dispatch(authLoginThunk(values));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setValues(loginFormInitialState);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <form onSubmit={handleFormSubmit} className=\"login__form\">\n        <h2>Please login</h2>\n        <label className=\"login__label\">\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            required\n            value={values.email}\n            onChange={handleChange}\n            className=\"login__input\"\n          />\n        </label>\n\n        <label className=\"login__label\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            required\n            value={values.password}\n            onChange={handleChange}\n            className=\"login__input\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"login__btn\" disabled={isRefreshing}>\n          Login\n        </button>\n\n        {authError === 'login' && (\n          <p>Please try again with other credentials.</p>\n        )}\n      </form>\n    </>\n  );\n}\n"],"names":["loginFormInitialState","email","password","LoginPage","dispatch","useDispatch","authError","useSelector","getAuthError","isRefreshing","getIsRefreshing","useState","values","setValues","handleChange","event","target","value","name","prev","handleFormSubmit","preventDefault","authLoginThunk","error","console","log","resetForm","Helmet","onSubmit","className","type","required","onChange","disabled"],"sourceRoot":""}